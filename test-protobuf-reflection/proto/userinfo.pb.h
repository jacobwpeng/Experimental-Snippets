// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userinfo.proto

#ifndef PROTOBUF_userinfo_2eproto__INCLUDED
#define PROTOBUF_userinfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_userinfo_2eproto();
void protobuf_AssignDesc_userinfo_2eproto();
void protobuf_ShutdownFile_userinfo_2eproto();

class GoodsInfo;
class SendRecord;
class ReceiveRecord;
class RequestRecord;
class Notification;
class ExchangePresentsInfo;

enum SendRecordType {
  ACTIVE = 1,
  RESPONSE_REQUEST = 2
};
bool SendRecordType_IsValid(int value);
const SendRecordType SendRecordType_MIN = ACTIVE;
const SendRecordType SendRecordType_MAX = RESPONSE_REQUEST;
const int SendRecordType_ARRAYSIZE = SendRecordType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SendRecordType_descriptor();
inline const ::std::string& SendRecordType_Name(SendRecordType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SendRecordType_descriptor(), value);
}
inline bool SendRecordType_Parse(
    const ::std::string& name, SendRecordType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SendRecordType>(
    SendRecordType_descriptor(), name, value);
}
enum ReceiveRecordType {
  BY_SELF_REQUEST = 1,
  BY_OTHER_ACTIVE = 2
};
bool ReceiveRecordType_IsValid(int value);
const ReceiveRecordType ReceiveRecordType_MIN = BY_SELF_REQUEST;
const ReceiveRecordType ReceiveRecordType_MAX = BY_OTHER_ACTIVE;
const int ReceiveRecordType_ARRAYSIZE = ReceiveRecordType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReceiveRecordType_descriptor();
inline const ::std::string& ReceiveRecordType_Name(ReceiveRecordType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReceiveRecordType_descriptor(), value);
}
inline bool ReceiveRecordType_Parse(
    const ::std::string& name, ReceiveRecordType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReceiveRecordType>(
    ReceiveRecordType_descriptor(), name, value);
}
enum NotificationType {
  REQUEST_GIFT = 1,
  RECEIVE_GIFT = 2
};
bool NotificationType_IsValid(int value);
const NotificationType NotificationType_MIN = REQUEST_GIFT;
const NotificationType NotificationType_MAX = RECEIVE_GIFT;
const int NotificationType_ARRAYSIZE = NotificationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NotificationType_descriptor();
inline const ::std::string& NotificationType_Name(NotificationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NotificationType_descriptor(), value);
}
inline bool NotificationType_Parse(
    const ::std::string& name, NotificationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NotificationType>(
    NotificationType_descriptor(), name, value);
}
// ===================================================================

class GoodsInfo : public ::google::protobuf::Message {
 public:
  GoodsInfo();
  virtual ~GoodsInfo();

  GoodsInfo(const GoodsInfo& from);

  inline GoodsInfo& operator=(const GoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsInfo& default_instance();

  void Swap(GoodsInfo* other);

  // implements Message ----------------------------------------------

  GoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsInfo& from);
  void MergeFrom(const GoodsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoodsInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static GoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class SendRecord : public ::google::protobuf::Message {
 public:
  SendRecord();
  virtual ~SendRecord();

  SendRecord(const SendRecord& from);

  inline SendRecord& operator=(const SendRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendRecord& default_instance();

  void Swap(SendRecord* other);

  // implements Message ----------------------------------------------

  SendRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendRecord& from);
  void MergeFrom(const SendRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // required .SendRecordType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::SendRecordType type() const;
  inline void set_type(::SendRecordType value);

  // @@protoc_insertion_point(class_scope:SendRecord)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static SendRecord* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveRecord : public ::google::protobuf::Message {
 public:
  ReceiveRecord();
  virtual ~ReceiveRecord();

  ReceiveRecord(const ReceiveRecord& from);

  inline ReceiveRecord& operator=(const ReceiveRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveRecord& default_instance();

  void Swap(ReceiveRecord* other);

  // implements Message ----------------------------------------------

  ReceiveRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveRecord& from);
  void MergeFrom(const ReceiveRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // required .ReceiveRecordType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::ReceiveRecordType type() const;
  inline void set_type(::ReceiveRecordType value);

  // @@protoc_insertion_point(class_scope:ReceiveRecord)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static ReceiveRecord* default_instance_;
};
// -------------------------------------------------------------------

class RequestRecord : public ::google::protobuf::Message {
 public:
  RequestRecord();
  virtual ~RequestRecord();

  RequestRecord(const RequestRecord& from);

  inline RequestRecord& operator=(const RequestRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRecord& default_instance();

  void Swap(RequestRecord* other);

  // implements Message ----------------------------------------------

  RequestRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRecord& from);
  void MergeFrom(const RequestRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RequestRecord)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static RequestRecord* default_instance_;
};
// -------------------------------------------------------------------

class Notification : public ::google::protobuf::Message {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  void Swap(Notification* other);

  // implements Message ----------------------------------------------

  Notification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // required .NotificationType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::NotificationType type() const;
  inline void set_type(::NotificationType value);

  // repeated .GoodsInfo goods_list = 3;
  inline int goods_list_size() const;
  inline void clear_goods_list();
  static const int kGoodsListFieldNumber = 3;
  inline const ::GoodsInfo& goods_list(int index) const;
  inline ::GoodsInfo* mutable_goods_list(int index);
  inline ::GoodsInfo* add_goods_list();
  inline const ::google::protobuf::RepeatedPtrField< ::GoodsInfo >&
      goods_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::GoodsInfo >*
      mutable_goods_list();

  // @@protoc_insertion_point(class_scope:Notification)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  int type_;
  ::google::protobuf::RepeatedPtrField< ::GoodsInfo > goods_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static Notification* default_instance_;
};
// -------------------------------------------------------------------

class ExchangePresentsInfo : public ::google::protobuf::Message {
 public:
  ExchangePresentsInfo();
  virtual ~ExchangePresentsInfo();

  ExchangePresentsInfo(const ExchangePresentsInfo& from);

  inline ExchangePresentsInfo& operator=(const ExchangePresentsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangePresentsInfo& default_instance();

  void Swap(ExchangePresentsInfo* other);

  // implements Message ----------------------------------------------

  ExchangePresentsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangePresentsInfo& from);
  void MergeFrom(const ExchangePresentsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SendRecord send_records = 1;
  inline int send_records_size() const;
  inline void clear_send_records();
  static const int kSendRecordsFieldNumber = 1;
  inline const ::SendRecord& send_records(int index) const;
  inline ::SendRecord* mutable_send_records(int index);
  inline ::SendRecord* add_send_records();
  inline const ::google::protobuf::RepeatedPtrField< ::SendRecord >&
      send_records() const;
  inline ::google::protobuf::RepeatedPtrField< ::SendRecord >*
      mutable_send_records();

  // repeated .ReceiveRecord receive_records = 2;
  inline int receive_records_size() const;
  inline void clear_receive_records();
  static const int kReceiveRecordsFieldNumber = 2;
  inline const ::ReceiveRecord& receive_records(int index) const;
  inline ::ReceiveRecord* mutable_receive_records(int index);
  inline ::ReceiveRecord* add_receive_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ReceiveRecord >&
      receive_records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ReceiveRecord >*
      mutable_receive_records();

  // repeated .RequestRecord request_records = 3;
  inline int request_records_size() const;
  inline void clear_request_records();
  static const int kRequestRecordsFieldNumber = 3;
  inline const ::RequestRecord& request_records(int index) const;
  inline ::RequestRecord* mutable_request_records(int index);
  inline ::RequestRecord* add_request_records();
  inline const ::google::protobuf::RepeatedPtrField< ::RequestRecord >&
      request_records() const;
  inline ::google::protobuf::RepeatedPtrField< ::RequestRecord >*
      mutable_request_records();

  // repeated .Notification notifications = 4;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 4;
  inline const ::Notification& notifications(int index) const;
  inline ::Notification* mutable_notifications(int index);
  inline ::Notification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::Notification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::Notification >*
      mutable_notifications();

  // required uint32 uin = 5;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 5;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // required uint32 last_login_time = 6;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 last_login_time() const;
  inline void set_last_login_time(::google::protobuf::uint32 value);

  // required uint32 unprocessed_message_count = 7;
  inline bool has_unprocessed_message_count() const;
  inline void clear_unprocessed_message_count();
  static const int kUnprocessedMessageCountFieldNumber = 7;
  inline ::google::protobuf::uint32 unprocessed_message_count() const;
  inline void set_unprocessed_message_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ExchangePresentsInfo)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_last_login_time();
  inline void clear_has_last_login_time();
  inline void set_has_unprocessed_message_count();
  inline void clear_has_unprocessed_message_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SendRecord > send_records_;
  ::google::protobuf::RepeatedPtrField< ::ReceiveRecord > receive_records_;
  ::google::protobuf::RepeatedPtrField< ::RequestRecord > request_records_;
  ::google::protobuf::RepeatedPtrField< ::Notification > notifications_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 last_login_time_;
  ::google::protobuf::uint32 unprocessed_message_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_userinfo_2eproto();
  friend void protobuf_AssignDesc_userinfo_2eproto();
  friend void protobuf_ShutdownFile_userinfo_2eproto();

  void InitAsDefaultInstance();
  static ExchangePresentsInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// GoodsInfo

// required uint32 id = 1;
inline bool GoodsInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GoodsInfo::id() const {
  return id_;
}
inline void GoodsInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 count = 2;
inline bool GoodsInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GoodsInfo::count() const {
  return count_;
}
inline void GoodsInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// SendRecord

// required uint32 uin = 1;
inline bool SendRecord::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendRecord::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendRecord::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendRecord::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 SendRecord::uin() const {
  return uin_;
}
inline void SendRecord::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required .SendRecordType type = 2;
inline bool SendRecord::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendRecord::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendRecord::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::SendRecordType SendRecord::type() const {
  return static_cast< ::SendRecordType >(type_);
}
inline void SendRecord::set_type(::SendRecordType value) {
  assert(::SendRecordType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ReceiveRecord

// required uint32 uin = 1;
inline bool ReceiveRecord::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveRecord::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveRecord::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveRecord::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 ReceiveRecord::uin() const {
  return uin_;
}
inline void ReceiveRecord::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required .ReceiveRecordType type = 2;
inline bool ReceiveRecord::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveRecord::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveRecord::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ReceiveRecordType ReceiveRecord::type() const {
  return static_cast< ::ReceiveRecordType >(type_);
}
inline void ReceiveRecord::set_type(::ReceiveRecordType value) {
  assert(::ReceiveRecordType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RequestRecord

// required uint32 uin = 1;
inline bool RequestRecord::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRecord::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRecord::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRecord::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 RequestRecord::uin() const {
  return uin_;
}
inline void RequestRecord::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// -------------------------------------------------------------------

// Notification

// required uint32 uin = 1;
inline bool Notification::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Notification::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Notification::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Notification::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Notification::uin() const {
  return uin_;
}
inline void Notification::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required .NotificationType type = 2;
inline bool Notification::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Notification::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Notification::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Notification::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::NotificationType Notification::type() const {
  return static_cast< ::NotificationType >(type_);
}
inline void Notification::set_type(::NotificationType value) {
  assert(::NotificationType_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .GoodsInfo goods_list = 3;
inline int Notification::goods_list_size() const {
  return goods_list_.size();
}
inline void Notification::clear_goods_list() {
  goods_list_.Clear();
}
inline const ::GoodsInfo& Notification::goods_list(int index) const {
  return goods_list_.Get(index);
}
inline ::GoodsInfo* Notification::mutable_goods_list(int index) {
  return goods_list_.Mutable(index);
}
inline ::GoodsInfo* Notification::add_goods_list() {
  return goods_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GoodsInfo >&
Notification::goods_list() const {
  return goods_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::GoodsInfo >*
Notification::mutable_goods_list() {
  return &goods_list_;
}

// -------------------------------------------------------------------

// ExchangePresentsInfo

// repeated .SendRecord send_records = 1;
inline int ExchangePresentsInfo::send_records_size() const {
  return send_records_.size();
}
inline void ExchangePresentsInfo::clear_send_records() {
  send_records_.Clear();
}
inline const ::SendRecord& ExchangePresentsInfo::send_records(int index) const {
  return send_records_.Get(index);
}
inline ::SendRecord* ExchangePresentsInfo::mutable_send_records(int index) {
  return send_records_.Mutable(index);
}
inline ::SendRecord* ExchangePresentsInfo::add_send_records() {
  return send_records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SendRecord >&
ExchangePresentsInfo::send_records() const {
  return send_records_;
}
inline ::google::protobuf::RepeatedPtrField< ::SendRecord >*
ExchangePresentsInfo::mutable_send_records() {
  return &send_records_;
}

// repeated .ReceiveRecord receive_records = 2;
inline int ExchangePresentsInfo::receive_records_size() const {
  return receive_records_.size();
}
inline void ExchangePresentsInfo::clear_receive_records() {
  receive_records_.Clear();
}
inline const ::ReceiveRecord& ExchangePresentsInfo::receive_records(int index) const {
  return receive_records_.Get(index);
}
inline ::ReceiveRecord* ExchangePresentsInfo::mutable_receive_records(int index) {
  return receive_records_.Mutable(index);
}
inline ::ReceiveRecord* ExchangePresentsInfo::add_receive_records() {
  return receive_records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ReceiveRecord >&
ExchangePresentsInfo::receive_records() const {
  return receive_records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ReceiveRecord >*
ExchangePresentsInfo::mutable_receive_records() {
  return &receive_records_;
}

// repeated .RequestRecord request_records = 3;
inline int ExchangePresentsInfo::request_records_size() const {
  return request_records_.size();
}
inline void ExchangePresentsInfo::clear_request_records() {
  request_records_.Clear();
}
inline const ::RequestRecord& ExchangePresentsInfo::request_records(int index) const {
  return request_records_.Get(index);
}
inline ::RequestRecord* ExchangePresentsInfo::mutable_request_records(int index) {
  return request_records_.Mutable(index);
}
inline ::RequestRecord* ExchangePresentsInfo::add_request_records() {
  return request_records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RequestRecord >&
ExchangePresentsInfo::request_records() const {
  return request_records_;
}
inline ::google::protobuf::RepeatedPtrField< ::RequestRecord >*
ExchangePresentsInfo::mutable_request_records() {
  return &request_records_;
}

// repeated .Notification notifications = 4;
inline int ExchangePresentsInfo::notifications_size() const {
  return notifications_.size();
}
inline void ExchangePresentsInfo::clear_notifications() {
  notifications_.Clear();
}
inline const ::Notification& ExchangePresentsInfo::notifications(int index) const {
  return notifications_.Get(index);
}
inline ::Notification* ExchangePresentsInfo::mutable_notifications(int index) {
  return notifications_.Mutable(index);
}
inline ::Notification* ExchangePresentsInfo::add_notifications() {
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Notification >&
ExchangePresentsInfo::notifications() const {
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::Notification >*
ExchangePresentsInfo::mutable_notifications() {
  return &notifications_;
}

// required uint32 uin = 5;
inline bool ExchangePresentsInfo::has_uin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangePresentsInfo::set_has_uin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangePresentsInfo::clear_has_uin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangePresentsInfo::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 ExchangePresentsInfo::uin() const {
  return uin_;
}
inline void ExchangePresentsInfo::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required uint32 last_login_time = 6;
inline bool ExchangePresentsInfo::has_last_login_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExchangePresentsInfo::set_has_last_login_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExchangePresentsInfo::clear_has_last_login_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExchangePresentsInfo::clear_last_login_time() {
  last_login_time_ = 0u;
  clear_has_last_login_time();
}
inline ::google::protobuf::uint32 ExchangePresentsInfo::last_login_time() const {
  return last_login_time_;
}
inline void ExchangePresentsInfo::set_last_login_time(::google::protobuf::uint32 value) {
  set_has_last_login_time();
  last_login_time_ = value;
}

// required uint32 unprocessed_message_count = 7;
inline bool ExchangePresentsInfo::has_unprocessed_message_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExchangePresentsInfo::set_has_unprocessed_message_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ExchangePresentsInfo::clear_has_unprocessed_message_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ExchangePresentsInfo::clear_unprocessed_message_count() {
  unprocessed_message_count_ = 0u;
  clear_has_unprocessed_message_count();
}
inline ::google::protobuf::uint32 ExchangePresentsInfo::unprocessed_message_count() const {
  return unprocessed_message_count_;
}
inline void ExchangePresentsInfo::set_unprocessed_message_count(::google::protobuf::uint32 value) {
  set_has_unprocessed_message_count();
  unprocessed_message_count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SendRecordType>() {
  return ::SendRecordType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ReceiveRecordType>() {
  return ::ReceiveRecordType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NotificationType>() {
  return ::NotificationType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_userinfo_2eproto__INCLUDED
