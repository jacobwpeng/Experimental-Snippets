// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arena_message.proto

#ifndef PROTOBUF_arena_5fmessage_2eproto__INCLUDED
#define PROTOBUF_arena_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace arenasvrd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_arena_5fmessage_2eproto();
void protobuf_AssignDesc_arena_5fmessage_2eproto();
void protobuf_ShutdownFile_arena_5fmessage_2eproto();

class Request;
class Response;

enum Request_Type {
  Request_Type_FIND_OPPONENT = 0,
  Request_Type_UPDATE_SELF = 1
};
bool Request_Type_IsValid(int value);
const Request_Type Request_Type_Type_MIN = Request_Type_FIND_OPPONENT;
const Request_Type Request_Type_Type_MAX = Request_Type_UPDATE_SELF;
const int Request_Type_Type_ARRAYSIZE = Request_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Type_descriptor();
inline const ::std::string& Request_Type_Name(Request_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Type_descriptor(), value);
}
inline bool Request_Type_Parse(
    const ::std::string& name, Request_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Type>(
    Request_Type_descriptor(), name, value);
}
enum Response_Status {
  Response_Status_OK = 1,
  Response_Status_NOT_IN_SEASON_TIME = 2,
  Response_Status_NO_OPPONENT = 3
};
bool Response_Status_IsValid(int value);
const Response_Status Response_Status_Status_MIN = Response_Status_OK;
const Response_Status Response_Status_Status_MAX = Response_Status_NO_OPPONENT;
const int Response_Status_Status_ARRAYSIZE = Response_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_Status_descriptor();
inline const ::std::string& Response_Status_Name(Response_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_Status_descriptor(), value);
}
inline bool Response_Status_Parse(
    const ::std::string& name, Response_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_Status>(
    Response_Status_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Type Type;
  static const Type FIND_OPPONENT = Request_Type_FIND_OPPONENT;
  static const Type UPDATE_SELF = Request_Type_UPDATE_SELF;
  static inline bool Type_IsValid(int value) {
    return Request_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Request_Type_Type_MIN;
  static const Type Type_MAX =
    Request_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Request_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Request_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Request_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Request_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .arenasvrd.Request.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::arenasvrd::Request_Type type() const;
  inline void set_type(::arenasvrd::Request_Type value);

  // optional uint32 self = 2;
  inline bool has_self() const;
  inline void clear_self();
  static const int kSelfFieldNumber = 2;
  inline ::google::protobuf::uint32 self() const;
  inline void set_self(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  inline bool has_points() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 3;
  inline ::google::protobuf::uint32 points() const;
  inline void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:arenasvrd.Request)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_self();
  inline void clear_has_self();
  inline void set_has_points();
  inline void clear_has_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 self_;
  ::google::protobuf::uint32 points_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_arena_5fmessage_2eproto();
  friend void protobuf_AssignDesc_arena_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_arena_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_Status Status;
  static const Status OK = Response_Status_OK;
  static const Status NOT_IN_SEASON_TIME = Response_Status_NOT_IN_SEASON_TIME;
  static const Status NO_OPPONENT = Response_Status_NO_OPPONENT;
  static inline bool Status_IsValid(int value) {
    return Response_Status_IsValid(value);
  }
  static const Status Status_MIN =
    Response_Status_Status_MIN;
  static const Status Status_MAX =
    Response_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    Response_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return Response_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return Response_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return Response_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .arenasvrd.Response.Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::arenasvrd::Response_Status status() const;
  inline void set_status(::arenasvrd::Response_Status value);

  // optional uint32 opponent = 2;
  inline bool has_opponent() const;
  inline void clear_opponent();
  static const int kOpponentFieldNumber = 2;
  inline ::google::protobuf::uint32 opponent() const;
  inline void set_opponent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:arenasvrd.Response)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_opponent();
  inline void clear_has_opponent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int status_;
  ::google::protobuf::uint32 opponent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_arena_5fmessage_2eproto();
  friend void protobuf_AssignDesc_arena_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_arena_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// required .arenasvrd.Request.Type type = 1;
inline bool Request::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::arenasvrd::Request_Type Request::type() const {
  return static_cast< ::arenasvrd::Request_Type >(type_);
}
inline void Request::set_type(::arenasvrd::Request_Type value) {
  assert(::arenasvrd::Request_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 self = 2;
inline bool Request::has_self() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_self() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_self() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_self() {
  self_ = 0u;
  clear_has_self();
}
inline ::google::protobuf::uint32 Request::self() const {
  return self_;
}
inline void Request::set_self(::google::protobuf::uint32 value) {
  set_has_self();
  self_ = value;
}

// optional uint32 points = 3;
inline bool Request::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 Request::points() const {
  return points_;
}
inline void Request::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
}

// -------------------------------------------------------------------

// Response

// required .arenasvrd.Response.Status status = 1;
inline bool Response::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::arenasvrd::Response_Status Response::status() const {
  return static_cast< ::arenasvrd::Response_Status >(status_);
}
inline void Response::set_status(::arenasvrd::Response_Status value) {
  assert(::arenasvrd::Response_Status_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 opponent = 2;
inline bool Response::has_opponent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_opponent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_opponent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_opponent() {
  opponent_ = 0u;
  clear_has_opponent();
}
inline ::google::protobuf::uint32 Response::opponent() const {
  return opponent_;
}
inline void Response::set_opponent(::google::protobuf::uint32 value) {
  set_has_opponent();
  opponent_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace arenasvrd

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::arenasvrd::Request_Type>() {
  return ::arenasvrd::Request_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::arenasvrd::Response_Status>() {
  return ::arenasvrd::Response_Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_arena_5fmessage_2eproto__INCLUDED
